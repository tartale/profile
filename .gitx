#!/usr/bin/env bash
# shellcheck disable=SC1090

git config --global core.excludesfile "${HOME}/.gitignore"
git config --global credentials.username "tartale"
git config --global pull.ff "only"
git config --global receive.denyCurrentBranch ignore
git config --global submodule.recurse true
git config --global url.ssh://git@github.com/.insteadof "https://github.com/"
git config --global user.email "tartale.work@gmail.com"
git config --global user.name "Tom"
export GITHUB_ORIGIN="git@github.com:tartale"
export GITHUB_UPSTREAM="git@github.com:tartale"

function gdefault() (
  defaultBranch="${GIT_DEFAULT_BRANCH:-main}"
  echo "${defaultBranch}"
)
export -f gdefault

function gclone {
  if [ -z "$1" ]
  then
    echo "usage:  gclone <repository>"
    exit
  fi

  (cd "${WORKSPACE}" || exit
    git clone "${GITHUB_ORIGIN}/$1.git"
    (
      cd "$1" || exit
      git remote add upstream "${GITHUB_UPSTREAM}/$1.git"
      git fetch upstream
    )
  )
}

function gcurse() {
  read -r -a args <<< "${@}"
  gitDirs=()
  for arg in "${args[@]}"; do
    if [[ -d "${arg}" ]]; then
      gitDirs+=("${arg}")
      shift
    else
      break
    fi
  done
  if [[ -z "${gitDirs}" ]]; then
    IFS=$'\n' read -r -d '' -a gitDirs < <( find . -maxdepth 1 -type d -exec test -e {}/.git \; -print && printf '\0' )
  fi
  for dir in "${gitDirs[@]}"; do
    echo "${dir}" >&2
    (direnv_cd "${dir}" && "${@}")
  done
}
export -f gcurse 

function gchanged() {
  if [[ ! -e "./.git" ]]; then
    return 0
  fi
  status="$(git status -s 2>/dev/null)"
  if [[ -n "${status}" ]]; then
    echo "---> has changes" >&2
    return 1
  fi
}
export -f gchanged

function gfinish() {
  if [ -z "$1" ]
  then
    echo "usage:  gfinish <branch>"
    return
  fi
  branch="${1}"

  git checkout "$(gdefault)"
  git pull "$(gremote)" "$(gdefault)"
  git branch -D "${branch}"
}

function gpushall() {
  IFS=$'\n' read -r -d '' -a remotes < <( git remote )
  for r in "${remotes[@]}"; do
    git push "${r}" "$(gcb)" "${@}"
  done
}

function gremote() (
  local defaultRemote="upstream"
  git remote | grep upstream > /dev/null 2>&1
  local exists="$?"
  if [[ ${exists} == 1 ]]; then
    defaultRemote="origin"
  fi

  echo "${defaultRemote}"
)

function gsquash() (
  if [[ "${1}" == "" ]] || [[ "${2}" == "" ]]
  then
    echo "usage: gsquash <numCommits> <message>"
    return 1
  fi
  git reset --soft "HEAD~${1}" && git commit -vm "${2}"
)

function gitIgnoreGlobal() {
  gitIgnorePath="$(git config --get core.excludesFile)"
  touch "${gitIgnorePath}"
  read -r -a args <<< "${@}"
  for arg in "${args[@]}"; do
    if ! grep "${arg}" "${gitIgnorePath}" >/dev/null 2>&1; then
      echo "adding ${arg} to ${gitIgnorePath}"
      echo "${arg}" >> "${gitIgnorePath}"
    fi
  done
}

gitIgnoreGlobal '.DS_Store' '.*-secrets' '*~' '.idea/' '.vscode/' '.envrc'

source "${PROFILE}/.git-completion.${SHELLNAME}"
__git_complete gfinish _git_checkout
__git_complete gck _git_checkout
__git_complete gb _git_branch
