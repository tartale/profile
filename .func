#!/bin/bash

function ags() {
  secretID="${1}"
  aws secretsmanager get-secret-value --secret-id "${secretID}" --output json | jq -r '.SecretString' | jq
}

function cdp() {
  cd "${WORKSPACE}/$1"
}

function _complete_cdp {
  _complete_dir_helper "${WORKSPACE}"
}
# FIXME
# complete -F _complete_cdp cdp 

function decode() {
  echo "${1}" | base64 -d
  echo
}

function dockerclean() {
  docker images -f "dangling=true" -q | xargs docker rmi -f || true
  docker rm -v $(docker ps -a -q -f status=exited) || true
  docker volume ls -f 'dangling=true' -q | xargs docker volume rm || true
  docker ps -a | egrep 'Exited.*(days|weeks|months)' | awk '{print $1}' | xargs docker rm -v || true
  docker system prune -f || true
}

function encode() {
  printf "${1}" | base64
}

function eg() {
  env | grep "${1}"
}

function ff() {
  find . -type f -exec grep -l "${1}" {} \;
}

function interface() {
  netstat -rn | grep default | head -1 | awk '{print $6}'
}

function kdap() {
  if [ $# -ne 1 ]; then
    echo "usage: $0 namespace" >&2
    return 1
  fi
  kubectl delete --all pods --namespace=$1
}

function kdaa() {
  if [ $# -ne 1 ]; then
    echo "usage: $0 namespace" >&2
    return 1
  fi
  kubectl delete --all deployments,jobs,services,pods --namespace=$1
}

function hx() {
  cmd="history"
  for g in $*; do
    cmd="$cmd | grep ${g}"
  done
  eval "${cmd} | cut -d ' ' -f 3-"
}

function myIP() {
  curl http://api.ipify.org 2> /dev/null
  echo
}

function mvlink() {
  if [ -z $1 ] || [ -z $2 ]; then
    echo "usage: $0 sourceLink target"
    return 1
  fi

  if [ ! -L $1 ]; then
    echo "$1: not a symbolic link"
    return 1
  fi

  rm -f $1 && ln -s $2 $1
}

thisOS=$(uname)
source "${WORKSPACE}/profile/.func-${thisOS}"

# if [ -e "${WORKSPACE}/profile/.func-aspenmesh" ]
# then
#     source "${WORKSPACE}/profile/.func-aspenmesh"
# fi
